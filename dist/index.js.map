{"version":3,"file":"index.js","mappings":"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","sources":["webpack://neoflexfrontproject/./scripts/manipulateTabs.js","webpack://neoflexfrontproject/./scripts/setTable.js","webpack://neoflexfrontproject/./scripts/index.js","webpack://neoflexfrontproject/./scripts/manipulateLikes.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst manipulateTabs = () => {\r\n  const tabs = document.querySelectorAll(\".tabs_item\");\r\n  const pageContentContainers = document.querySelectorAll(\"main .container\");\r\n\r\n  const removePrevActiveClass = () => {\r\n    tabs.forEach((tab) => {\r\n      tab.classList.remove(\"active\");\r\n    });\r\n  };\r\n\r\n  const addActiveClass = (activeTab) => {\r\n    activeTab.classList.add(\"active\");\r\n  };\r\n\r\n  const hidePrevContent = () => {\r\n    pageContentContainers.forEach((contentContainer) => {\r\n      contentContainer.classList.add(\"hide\");\r\n    });\r\n  };\r\n\r\n  const showContent = (index) => {\r\n    pageContentContainers[index].classList.remove(\"hide\");\r\n  };\r\n\r\n  const selectTab = () => {\r\n    tabs.forEach((tab, index) => {\r\n      tab.addEventListener(\"click\", () => {\r\n        removePrevActiveClass();\r\n        addActiveClass(tab);\r\n        hidePrevContent();\r\n        showContent(index);\r\n      });\r\n    });\r\n  };\r\n\r\n  selectTab();\r\n};\r\n\r\nexport default manipulateTabs;\r\n","\"use strict\";\r\n\r\nconst setTable = () => {\r\n  const getTableData = async () => {\r\n    const limit = \"?_limit=65\";\r\n    const url = `https://jsonplaceholder.typicode.com/albums/${limit}`;\r\n\r\n    const data = await fetch(url);\r\n\r\n    if (!data.ok) alert(\"Ошибка загрузки данных для таблицы!\");\r\n\r\n    manipulateTable(await data.json());\r\n  };\r\n\r\n  const manipulateTable = (tableData) => {\r\n    //dom\r\n    const table = document.querySelector(\".table\");\r\n    const select = document.querySelector(\"select\");\r\n    const tableHeader = document.querySelector(\".table-header\");\r\n\r\n    const paginationContainer = document.querySelector(\".pagination\");\r\n\r\n    const paginationPrevArrow = paginationContainer.querySelector(\".prev \");\r\n    const paginationNextArrow = paginationContainer.querySelector(\".next \");\r\n\r\n    const paginatorElementsContainer = paginationContainer.querySelector(\r\n      \".paginator-elements-container\"\r\n    );\r\n\r\n    //constants\r\n    const amountOfColumns = 3;\r\n    const visiblePaginators = 7;\r\n    const stepForNextPaginators = 4;\r\n\r\n    //mutable\r\n    let selectedRows = +select.value;\r\n\r\n    let tablePages = 1;\r\n\r\n    let paginators = []; //here are all paginators (buttons of pagination without '...')\r\n\r\n    let currentIndexPaginator = 0;\r\n    let startIndexPaginator = 0;\r\n    let endIndexPaginator = visiblePaginators;\r\n\r\n    const clearChildNodes = (parentNode) => {\r\n      while (parentNode.hasChildNodes()) {\r\n        parentNode.removeChild(parentNode.lastChild);\r\n      }\r\n    };\r\n\r\n    const appendTableHeader = () => {\r\n      table.appendChild(tableHeader);\r\n    };\r\n\r\n    const createTablePageData = (index) => {\r\n      const tablePageData = tableData.slice(\r\n        index * selectedRows,\r\n        index * selectedRows + selectedRows\r\n      );\r\n\r\n      return tablePageData;\r\n    };\r\n\r\n    const showTableData = (tableData) => {\r\n      const length =\r\n        tableData.length > selectedRows ? selectedRows : tableData.length;\r\n\r\n      for (let row = 0; row < length; row++) {\r\n        const rowData = Object.values(tableData[row]);\r\n        let tableRow = document.createElement(\"div\");\r\n        tableRow.className = \"table-row row-elements\";\r\n\r\n        for (let column = 0; column < amountOfColumns; column++) {\r\n          let cellElement = document.createElement(\"span\");\r\n          cellElement.textContent = `${rowData[column]}`;\r\n          tableRow.appendChild(cellElement);\r\n        }\r\n\r\n        table.appendChild(tableRow);\r\n      }\r\n    };\r\n\r\n    const createTable = (tableData) => {\r\n      clearChildNodes(table);\r\n\r\n      appendTableHeader();\r\n      showTableData(tableData);\r\n    };\r\n\r\n    const setTableWithPagination = () => {\r\n      createTable(tableData);\r\n\r\n      showPagination();\r\n      addPaginationActiveClass(0); //init 1st paginator (add active class)\r\n    };\r\n\r\n    /* --------------------------------- pagination --------------------------------- */\r\n\r\n    const removePaginationActiveClass = () => {\r\n      paginators.forEach((paginator) => {\r\n        paginator.classList.remove(\"active\");\r\n      });\r\n    };\r\n\r\n    const addPaginationActiveClass = (index) => {\r\n      paginators[index].classList.add(\"active\");\r\n    };\r\n\r\n    const createPaginatorElement = (paginatorContent) => {\r\n      const paginatorElement = document.createElement(\"a\");\r\n      paginatorElement.className = \"paginator-item\";\r\n      paginatorElement.textContent = `${paginatorContent}`;\r\n\r\n      paginators.push(paginatorElement);\r\n\r\n      return paginatorElement;\r\n    };\r\n\r\n    const setAllPaginators = () => {\r\n      paginators = [];\r\n      tablePages = Math.ceil(tableData.length / selectedRows);\r\n\r\n      for (let index = 0; index < tablePages; index++)\r\n        createPaginatorElement(index + 1);\r\n    };\r\n\r\n    const showPagination = (startIndex = 0, endIndex = visiblePaginators) => {\r\n      clearChildNodes(paginatorElementsContainer);\r\n      setAllPaginators();\r\n\r\n      if (paginators.length < visiblePaginators) endIndex = paginators.length;\r\n      for (let index = startIndex; index < endIndex; index++)\r\n        paginatorElementsContainer.appendChild(paginators[index]);\r\n\r\n      selectTablePage(startIndex, endIndex);\r\n    };\r\n\r\n    const clickedOnLastPaginatorElement = (startIndex, index) => {\r\n      if (\r\n        index - startIndex + 1 === visiblePaginators &&\r\n        index != tablePages - 1\r\n      ) {\r\n        startIndexPaginator += stepForNextPaginators;\r\n\r\n        endIndexPaginator =\r\n          endIndexPaginator + stepForNextPaginators > tablePages\r\n            ? tablePages\r\n            : endIndexPaginator + stepForNextPaginators;\r\n\r\n        showPagination(startIndexPaginator, endIndexPaginator);\r\n        addPaginationActiveClass(index, paginators);\r\n      }\r\n    };\r\n\r\n    const clickedOnFirstPaginatorElement = (startIndex, index) => {\r\n      if (index === startIndex && index != 0) {\r\n        startIndexPaginator -=\r\n          startIndexPaginator - stepForNextPaginators > 0\r\n            ? stepForNextPaginators\r\n            : startIndexPaginator; //move index to 0\r\n\r\n        const amountOfPaginators = endIndexPaginator - startIndex;\r\n\r\n        if (amountOfPaginators < visiblePaginators)\r\n          endIndexPaginator =\r\n            endIndexPaginator -\r\n            (stepForNextPaginators - (visiblePaginators - amountOfPaginators));\r\n        else if (tablePages - visiblePaginators < stepForNextPaginators)\r\n          endIndexPaginator -= tablePages - visiblePaginators + 1;\r\n        else endIndexPaginator -= stepForNextPaginators;\r\n\r\n        showPagination(startIndexPaginator, endIndexPaginator);\r\n        addPaginationActiveClass(index);\r\n      }\r\n    };\r\n\r\n    const pageSelected = (startIndex, index) => {\r\n      const tablePageData = createTablePageData(index);\r\n      createTable(tablePageData);\r\n\r\n      currentIndexPaginator = index;\r\n\r\n      clickedOnLastPaginatorElement(startIndex, index);\r\n      clickedOnFirstPaginatorElement(startIndex, index);\r\n\r\n      removePaginationActiveClass();\r\n      addPaginationActiveClass(index);\r\n    };\r\n\r\n    const selectTablePage = (startIndex, endIndex) => {\r\n      for (let index = startIndex; index < endIndex; index++) {\r\n        paginators[index].addEventListener(\"click\", () => {\r\n          currentIndexPaginator = index;\r\n\r\n          pageSelected(startIndex, index);\r\n        });\r\n      }\r\n    };\r\n\r\n    const selectPreviousPage = () => {\r\n      paginationPrevArrow.addEventListener(\"click\", () => {\r\n        if (currentIndexPaginator > 0) currentIndexPaginator--;\r\n        pageSelected(startIndexPaginator, currentIndexPaginator);\r\n      });\r\n    };\r\n\r\n    const selectNextPage = () => {\r\n      paginationNextArrow.addEventListener(\"click\", () => {\r\n        if (currentIndexPaginator < tablePages - 1) currentIndexPaginator++;\r\n        pageSelected(startIndexPaginator, currentIndexPaginator);\r\n      });\r\n    };\r\n\r\n    const selectAmountOfRows = () => {\r\n      select.addEventListener(\"change\", (event) => {\r\n        selectedRows = event.target.value;\r\n        setTableWithPagination();\r\n\r\n        currentIndexPaginator = 0;\r\n        startIndexPaginator = 0;\r\n        endIndexPaginator = visiblePaginators;\r\n      });\r\n    };\r\n\r\n    setTableWithPagination();\r\n    selectAmountOfRows();\r\n    selectNextPage();\r\n    selectPreviousPage();\r\n  };\r\n\r\n  getTableData();\r\n};\r\n\r\nexport default setTable();\r\n","\"use strict\";\r\n\r\nimport manipulateTabs from \"./manipulateTabs\";\r\nimport manipulateLikes from \"./manipulateLikes\";\r\nimport setTable from \"./setTable\";\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n  manipulateTabs();\r\n  manipulateLikes();\r\n  setTable();\r\n});\r\n","\"use strict\";\r\n\r\nconst manipulateLikes = () => {\r\n  const likeButtons = document.querySelectorAll(\".like\");\r\n\r\n  const addLike = () => {\r\n    likeButtons.forEach((likeButton) => {\r\n      likeButton.addEventListener(\"click\", () => {\r\n        if (likeButton.classList.contains(\"liked\"))\r\n          likeButton.classList.remove(\"liked\");\r\n        else likeButton.classList.add(\"liked\");\r\n      });\r\n    });\r\n  };\r\n\r\n  addLike();\r\n};\r\n\r\nexport default manipulateLikes;\r\n"],"names":["async","data","fetch","ok","alert","tableData","table","document","querySelector","select","tableHeader","paginationContainer","paginationPrevArrow","paginationNextArrow","paginatorElementsContainer","selectedRows","value","tablePages","paginators","currentIndexPaginator","startIndexPaginator","endIndexPaginator","clearChildNodes","parentNode","hasChildNodes","removeChild","lastChild","createTable","appendChild","length","row","rowData","Object","values","tableRow","createElement","className","column","cellElement","textContent","showTableData","setTableWithPagination","showPagination","addPaginationActiveClass","index","classList","add","createPaginatorElement","paginatorContent","paginatorElement","push","startIndex","endIndex","Math","ceil","setAllPaginators","selectTablePage","pageSelected","tablePageData","slice","createTablePageData","clickedOnLastPaginatorElement","amountOfPaginators","clickedOnFirstPaginatorElement","forEach","paginator","remove","addEventListener","event","target","manipulateTable","json","getTableData","window","tabs","querySelectorAll","pageContentContainers","tab","contentContainer","showContent","likeButton","contains"],"sourceRoot":""}